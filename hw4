-- 1. Вывести на экран сколько машин каждого цвета для машин марок BMW и LADA
-- select COLOR,
--        count(COLOR) as AMOUNT,
--        MARK
-- from auto
-- where MARK in ('BMW', 'LADA')
-- group by COLOR,MARK;


-- 2. Вывести на экран марку авто и количество AUTO не этой марки

-- SELECT MARK, COUNT(MARK),
-- 	   (SELECT COUNT(MARK) FROM AUTO) - COUNT(MARK)
-- FROM AUTO
-- WHERE MARK='BMW'


-- Задание №3.
-- Даны 2 таблицы, созданные следующим образом:
-- create table test_a (id INT, data varchar(45));
-- create table test_b (id INT);
-- insert into test_a(id, data) values
-- (10, 'A'),
-- (20, 'A'),
-- (30, 'F'),
-- (40, 'D'),
-- (50, 'C');
-- insert into test_b(id) values
-- (10),
-- (30),
-- (50);
-- Напишите запрос, который вернет строки из таблицы test_a, id которых нет в таблице test_b, НЕ используя ключевого слова NOT.

SELECT a.id, a.data
FROM test_a a LEFT JOIN test_b b
ON a.id=b.id
WHERE b.id IS NULL


-- Дополнительное задание: 

-- выбрать всех пользователей, указав их id, имя и фамилию, город и аватарку
-- (используя вложенные запросы)
-- SELECT 
-- 	id,
--     firstname,
--     lastname,
--     (SELECT hometown FROM `profiles` WHERE user_id=users.id),
--     (SELECT filename FROM media where media.id = (select photo_id from profiles where user_id = users.id))
-- FROM users

-- выбрать фотографии (filename) пользователя с email: arlo50@example.org . ID типа медиа, соответствующий фотографиям неизвестен.
-- (используя вложенные запросы)

-- SELECT user_id , media_type_id , filename FROM media 
-- WHERE user_id = (SELECT id FROM users WHERE email = 'arlo50@example.org') AND 
-- media_type_id  IN (SELECT id FROM media_types WHERE name_type LIKE  'Photo');


-- выбрать id друзей пользователя с id = 1
-- (используя UNION)

-- SELECT initiator_user_id
-- FROM friend_requests
-- WHERE target_user_id=1 AND status='approved'
-- UNION
-- SELECT target_user_id
-- FROM friend_requests
-- WHERE initiator_user_id=1 AND status='approved'


-- выбрать всех пользователей, указав их id, имя и фамилию, город и аватарку
-- (используя JOIN)

-- SELECT u.id,
-- 	   u.firstname,
--        u.lastname,
--        p.hometown,
--        m.filename
-- FROM users u 
-- JOIN profiles p
-- ON u.id=p.user_id
-- LEFT JOIN media m
-- ON p.photo_id=m.id;


-- Список медиафайлов пользователей, указав название типа медиа (id, filename, name_type)
-- (используя JOIN)

-- SELECT 
-- 	m.id,
--     m.filename,
--     mt.name_type
-- FROM media m
-- LEFT JOIN media_types mt
-- ON m.media_type_id=mt.id

